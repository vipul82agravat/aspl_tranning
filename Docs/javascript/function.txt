-A JavaScript function is a block of code designed to perform a particular task.
-A JavaScript function is executed when "something" invokes it (calls it).

    // Function to compute the product of p1 and p2
        function myFunction(p1, p2) {
        return p1 * p2;
        }

    JavaScript Function Syntax
        -A JavaScript function is defined with the function keyword, followed by a name, followed by parentheses ().
        -Function names can contain letters, digits, underscores, and dollar signs (same rules as variables).

        syantx
            function name(parameter1, parameter2, parameter3) {
            // code to be executed
            }

            Function parameters are listed inside the parentheses () in the function definition.

            Function arguments are the values received by the function when it is invoked.

            Inside the function, the arguments (the parameters) behave as local variables.


    Function Invocation
            The code inside the function will execute when "something" invokes (calls) the function:

            When an event occurs (when a user clicks a button)

            When it is invoked (called) from JavaScript code

            Automatically (self invoked)


       Function Return
            When JavaScript reaches a return statement, the function will stop executing.

            If the function was invoked from a statement, JavaScript will "return" to execute the code after the invoking statement.

            example

            function myFunction(a, b) {
            return a * b;             // Function returns the product of a and b
            }

            Why Functions?
                You can reuse code: Define the code once, and use it many times.


            The () Operator Invokes the Function
                Accessing a function without () will return the function object instead of the function result.

         Functions Used as Variable Values
            Functions can be used the same way as you use variables, in all types of formulas, assignments, and calculations.
            let x = toCelsius(77);

        Local Variables

            Variables declared within a JavaScript function, become LOCAL to the function.

            Local variables can only be accessed from within the function.


            function myFunction() {
            let carName = "Volvo";
            // code here CAN use carName
            }
